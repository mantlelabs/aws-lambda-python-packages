# Because fiona, rasterio and shapely share GDAL lib, we need to install GDAL source, install python modules from sources and ship the package with the gdal ".so" files
FROM lambda:gdal

RUN CFLAGS=--std=c99 pip3 install fiona rasterio[s3] pandas pymongo requests --pre rasterio --no-binary fiona,numpy,rasterio,shapely -t /tmp/vendored -U

# Echo the estimated size of the package
RUN du -sh /tmp/vendored

RUN find /tmp/vendored -name "*-info" -type d -exec rm -rdf {} +
RUN rm -rdf /tmp/vendored/boto3/
RUN rm -rdf /tmp/vendored/botocore/
RUN rm -rdf /tmp/vendored/docutils/
RUN rm -rdf /tmp/vendored/dateutil/
RUN rm -rdf /tmp/vendored/jmespath/
RUN rm -rdf /tmp/vendored/s3transfer/
RUN rm -rdf /tmp/vendored/numpy/doc/
RUN du -sh /tmp/vendored

# Leave module precompiles for faster Lambda startup
RUN find /tmp/vendored -type f -name '*.pyc' | while read f; do n=$(echo $f | sed 's/__pycache__\///' | sed 's/.cpython-36//'); cp $f $n; done;
RUN find /tmp/vendored -type d -a -name '__pycache__' -print0 | xargs -0 rm -rf
RUN find /tmp/vendored -type f -a -name '*.py' -print0 | xargs -0 rm -f
RUN du -sh /tmp/vendored

# Bring your own script
COPY scripts/handler_r_f.py /tmp/vendored/handler.py

# Create the zip file
RUN cd /tmp/vendored && zip -r9q /tmp/package.zip *
RUN cd $APP_DIR/local && zip -r9q --symlinks /tmp/package.zip lib/*.so*
RUN cd $APP_DIR/local && zip -r9q /tmp/package.zip share

RUN du -sh /tmp/package.zip
